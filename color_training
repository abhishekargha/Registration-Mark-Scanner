// Define color ranges for additional colors
int colorRanges[NUM_COLORS][6] = {
    {100, 150, 20, 80, 50, 100},  // Red
    {30, 80, 100, 200, 30, 80},    // Green
    {20, 60, 80, 150, 150, 255},   // Blue
    {5, 50, 5, 50, 5, 50},         // Black
    {120, 180, 50, 120, 150, 220}  // Violet
    // ... Define ranges for other colors
};

// Function to detect color based on sensor readings using a Decision Tree
int detectColor(int redValue, int greenValue, int blueValue) {
    if (
        redValue >= colorRanges[0][0] && redValue <= colorRanges[0][1] &&
        greenValue >= colorRanges[0][2] && greenValue <= colorRanges[0][3] &&
        blueValue >= colorRanges[0][4] && blueValue <= colorRanges[0][5]
    ) {
        return 0; // Detected Red
    } else if (
        redValue >= colorRanges[1][0] && redValue <= colorRanges[1][1] &&
        greenValue >= colorRanges[1][2] && greenValue <= colorRanges[1][3] &&
        blueValue >= colorRanges[1][4] && blueValue <= colorRanges[1][5]
    ) {
        return 1; // Detected Green
    } else if (
        redValue >= colorRanges[2][0] && redValue <= colorRanges[2][1] &&
        greenValue >= colorRanges[2][2] && greenValue <= colorRanges[2][3] &&
        blueValue >= colorRanges[2][4] && blueValue <= colorRanges[2][5]
    ) {
        return 2; // Detected Blue
    } else if (
        redValue >= colorRanges[3][0] && redValue <= colorRanges[3][1] &&
        greenValue >= colorRanges[3][2] && greenValue <= colorRanges[3][3] &&
        blueValue >= colorRanges[3][4] && blueValue <= colorRanges[3][5]
    ) {
        return 3; // Detected Black
    } else if (
        redValue >= colorRanges[4][0] && redValue <= colorRanges[4][1] &&
        greenValue >= colorRanges[4][2] && greenValue <= colorRanges[4][3] &&
        blueValue >= colorRanges[4][4] && blueValue <= colorRanges[4][5]
    ) {
        return 4; // Detected Violet
    } else {
        return -1; // No color detected
    }
}
